add <description>
  Task.new(description)
  if valid
    commit task
  else
    return error to user to correct
  end
end

list
  Task.all
end

delete <primary_key>
  Task.delete(primary_key)
  return task.desc
end

complete <primary_key>
  task.complete
  return task.desc
end

validate <task_object>
  return true if <task_object> passes validation
end


AR valid? method
[ from http://guides.rubyonrails.org/active_record_validations_callbacks.html ]

2.4 valid? and invalid?
To verify whether or not an object is valid, Rails uses the valid? method. You can also use this method on your own. valid? triggers your validations and returns true if no errors were found in the object, and false otherwise.

class Person < ActiveRecord::Base
  validates :name, :presence => true
end
 
Person.create(:name => "John Doe").valid? # => true
Person.create(:name => nil).valid? # => false
